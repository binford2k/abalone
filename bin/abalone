#! /usr/bin/env ruby

require 'rubygems'
require 'optparse'
require 'abalone'
require 'yaml'

defaults = {
  :port           => 9000,
  :host           => '0.0.0.0',
  :bind           => '0.0.0.0',
}
logfile    = $stderr
loglevel   = Logger::WARN
configfile = '/etc/abalone/config.yaml'
options    = {}
optparse = OptionParser.new { |opts|
    opts.banner = "Usage : abalone [-p <port>] [-l [logfile]] [-d]
         -- Runs the Abalone web shell.

"

    opts.on("-c CONFIGFILE", "--config CONFIGFILE", "Load configuration from a file. (/etc/abalone/config.yaml)") do
        configfile = arg
    end

    opts.on("-d", "--debug", "Display or log debugging messages") do
        loglevel = Logger::DEBUG
    end

    opts.on("-l [LOGFILE]", "--logfile [LOGFILE]", "Path to logfile. Defaults to no logging, or /var/log/abalone if no filename is passed.") do |arg|
        logfile = arg || '/var/log/abalone'
    end

    opts.on("-p PORT", "--port PORT", "Port to listen on. Defaults to 9000.") do |arg|
        options[:port] = arg
    end

    opts.separator('')

    opts.on("-h", "--help", "Displays this help") do
        puts
        puts opts
        puts
        exit
    end
}
optparse.parse!

logger           = Logger.new(logfile)
logger.level     = loglevel
options[:logger] = logger

config  = YAML.load_file(configfile) rescue {}
options = defaults.merge(config.merge(options))

raise 'Specify only one of a login command or SSH settings' if options.include? :command and options.include? :ssh

puts
puts
puts "Starting Abalone Web Shell. Browse to http://localhost:#{options[:port]}"
puts
puts

Abalone.run! options
